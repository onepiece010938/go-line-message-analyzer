name: Main
env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  SERVICE: go-line-message-analyzer # google run service name
  REGION: us-central1

on: # When do you want it to run
  push: # When pushed to master branch 
    branches: [ main ,gce-test]
  workflow_dispatch:

jobs: # Define jobs to run

  build:
    runs-on: ubuntu-latest # Define job-specific info
    steps: # Define job steps
      # Checks out project source code
      - uses: actions/checkout@v3
      # Sets up go based on the version
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
    # Lint the incoming code and validate that it meets projectâ€™s standards
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3

      - name: Build
        run: go build -v ./...

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # Sets up the gcloud cli with the credentials we previously created, and will be storing within Github as secrets.
      - name: Setup Cloud cli
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
        # Configure Docker with Credentials
      - name: Authorize Docker push
        run: gcloud auth configure-docker

      - name: Build and Push Container
        run: |-
          docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} .
          docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}
      - name: Deploy to Cloud Run
        id: line-message-analyzer
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ env.SERVICE }}
          image: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}
          region: ${{ env.REGION }}

      - name: Show Output
        run: echo ${{ steps.line-message-analyzer.outputs.url }}